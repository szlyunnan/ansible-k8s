---
- name: clear KUBELET_CLEAN directory
  file:
    path: "{{ KUBELET_WORK }}"
    state: absent
    force: yes
  when: "{{ KUBELET_CLEAN }}"

- name: mkdir directory
  file:
    path: "{{ KUBELET_WORK }}"
    state: directory

- name: rsync kube-node binariy
  copy:
    src: "{{ playbook_dir }}/binary/kubernetes/{{ KUBE_VERSION }}/{{ item }}"
    dest: "{{ BIN_WORK }}/{{ item }}"
    mode: 0755
  with_items:
    - kube-proxy
    - kubelet

- name: deal kube-node config
  template:
    src: "{{ item }}"
    dest: "{{ APP_WORK }}/config/kube/{{ item }}"
  with_items:
    - kubelet
    - proxy

- name: rsync bootstrap.kubeconfig to remote host
  copy:
    src: "{{ playbook_dir }}/ssl/kubernetes/{{ item }}"
    dest: "{{ APP_WORK }}/config/"
  with_items:
    - bootstrap.kubeconfig
    - kube-proxy.kubeconfig

- name: deal kube-node service file
  template:
    src: "{{ item }}"
    dest: "{{ LIB_WORK }}/{{ item }}"
  with_items:
    - kube-proxy.service
    - kubelet.service

- name: restart kube-node service
  systemd:
    state: restarted
    daemon_reload: yes
    name: "{{ item }}"
    enabled: yes
  with_items:
    - kubelet
    - kube-proxy
