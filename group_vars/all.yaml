---

################################ CLUSTER INFO ##########################

# inventory group name
# 配置为ansible hosts 文件的组名必须为如下，自定义的其他应用除外
#   也就是说SITE_INFO下面一层的如下配置必须为固定, 还有ip字段
# k8s_master
# k8s_work
# etcd
# proxy
# keepalived

# childre group
# 组嵌套CHILDREN下面一层的如下配置必须为固定
CHILDREN:
  k8s_node:
    children: [k8s_master, k8s_work]
  cluster_node:
    children: [k8s_master, k8s_work, proxy, etcd]

# 需要生成hosts 配置解析的应用组
HOSTS_LIST: [k8s_master, k8s_work, proxy, etcd]

# SITE_INFO 下面一层不能改变
SITE_INFO:
  k8s_master:
    master01:
      ip: 192.168.3.24
    master02:
      ip: 192.168.3.25
    master03:
      ip: 192.168.3.26
  
  etcd:
    etcd01:
      ip: 192.168.3.24
    etcd02:
      ip: 192.168.3.25
    etcd03:
      ip: 192.168.3.26

  k8s_work:
    work01:
      ip: 192.168.3.27
    work02:
      ip: 192.168.3.28
    work03:
      ip: 192.168.3.29
    master001:
      ip: 192.168.3.24
    master002:
      ip: 192.168.3.25
    master003:
      ip: 192.168.3.26

  proxy:
    proxy01:
      ip: 192.168.3.27
    proxy02:
      ip: 192.168.3.28
    proxy03:
      ip: 192.168.3.29
    proxy04:
      ip: 192.168.3.24
    proxy05:
      ip: 192.168.3.25
    proxy06:
      ip: 192.168.3.26
  
  ingress_work:
    ingress01:
      ip: 192.168.3.27
    ingress02:
      ip: 192.168.3.28
    ingress03:
      ip: 192.168.3.29
  
  glusterfs_work:
    glusterfs01:
      ip: 192.168.3.27
    glusterfs02:
      ip: 192.168.3.28
    glusterfs03:
      ip: 192.168.3.29

# domain
# 局域网内部解析域名，就算不用linux hosts 文件解析；也需要配置。应用使用配置文件
# 生成的hosts配置文件使用到, 证书使用到, addons 使用到

DOMAIN: "cc.co"

################################ BASE ##########################

# app work
APP_WORK: "/opt/kubernetes"

# clear config direcotry
# 清除的是 APP_WORK 配置的目录
# 多次运行脚本时是否需要清除老的已存在目录，默认会清理 config 配置目录
#   同一个环境跑多次的时候，请注意；不要误操作
CLEAR_EK_TAG: true

# run work
RUN_WORK: "/var/run"

# bin work
BIN_WORK: "/usr/local/bin"

# systemd service work
LIB_WORK: "/usr/lib/systemd/system"

# kubernetes cni
KUBE_N: "10.254.0"
KUBE_CNI: "{{ KUBE_N }}.0/16"

# kubernetes cluster dns domain 
# kubernetes 群集服务发现dns IP
# KUBE_DNS: "k8s-dns.{{ DOMAIN }}"
KUBE_DNS: "{{ KUBE_N }}.2"

# network card enp0s8 ens37 ens33 ens34
# 配置flanneld 调用的网络通信网卡，无论几个网卡；都必须选择一个网卡配置
NETWORK_CARD: "ens34"

# kube add ons info file
KUBE_ADDONS_INFO: "/tmp/addons.info"

################################ KUBERNETES ##########################
# KUBE_TAG: false
# 配置为false, 表示群集部署一个master节点;
# 配置为true, 表示群集部署多个master节点; 当配置为true时, 
#   必须配置下面KUBE_PROXY和KUBE_PROXY_PORT参数, 表示为代理apiserver地址和端口
#   表示为apiserver地址和端口
KUBE_TAG: true

# 当KUBE_TAG 为false时，此处配置不生效，
# 当配置为127.0.0.1 和 localhost 时；默认在本地安装haproxy或者nginx作为代理到apiserver
# 目前只支持本地安装haproxy或者nginx作为代理到apiserver
KUBE_PROXY: "127.0.0.1"
KUBE_PROXY_PORT: 8443

# 当KUBE_TAG 为true时， 此处配置不生效
# 单个master时，work使用的apiserver地址
KUBE_APISERVER: "one-master.{{ DOMAIN }}"

############################# kube master
# apiserver count default 1
API_COUNT: 1

################################ DOCKER ##########################
# docker  systemd or  cgroupfs 
CGROUP_DRIVE: "cgroupfs"

################################ KUBERNSTES HA ##########################
# ha_server 2 paras haproxy and nginx
# kubernetes 高可用默认支持haproxy和nginx，并且KUBE_TAG为true时才生效
# 选择使用那种应用作为高可用组件，参数 haproxy nginx
HA_SERVER: "haproxy"

################################ KUBE-ADDONS ##########################
# ingress keepalived vip
INGRESS_KP:
  tag: true
  etc: "/etc/keepalived"
  vip: "192.168.3.200"
  interface: "ens34"

