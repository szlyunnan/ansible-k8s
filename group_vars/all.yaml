---

################################ CLUSTER INFO ##########################
# cluster default use domain request
# if Lan is not domain service  used linux hosts to parsing domain
# HOSTS_FILE_TAG: true used linux hosts to parsing domain
# 域名默认处理方式
# 局域网内部若是没有域名服务器，可以使用linux的hosts文件作为域名解析
# 配置为true，默认解析方式为linux hosts文件
HOSTS_FILE_TAG: true

# inventory group name
# 配置为ansible hosts 文件的组名必须为如下，自定义的其他应用除外
#   也就是说SITE_INFO下面一层的如下配置必须为固定, 还有ip字段
# k8s_master
# k8s_work
# etcd
# proxy
# keepalived

# childre group
# 组嵌套CHILDREN下面一层的如下配置必须为固定
CHILDREN:
  k8s_node:
    children: [k8s_master, k8s_work]
  cluster_node:
    children: [k8s_master, k8s_work, proxy, etcd]


# 需要生成hosts 配置解析的应用组
HOSTS_LIST: [k8s_master, k8s_work, proxy, etcd]

# domain
# 局域网内部解析域名，就算不用linux hosts 文件解析；也需要配置。应用使用配置文件
# 生成的hosts配置文件使用到, 证书使用到, addons 使用到

DOMAIN: "cc.co"

# SITE_INFO 下面一层不能改变
SITE_INFO:
  k8s_master:
    master01:
      ip: 192.168.3.24
    master02:
      ip: 192.168.3.25
    master03:
      ip: 192.168.3.26
  
  etcd:
    etcd01:
      ip: 192.168.3.24
    etcd02:
      ip: 192.168.3.25
    etcd03:
      ip: 192.168.3.26

  k8s_work:
    work01:
      ip: 192.168.3.27
    work02:
      ip: 192.168.3.28
    work03:
      ip: 192.168.3.29
    master001:
      ip: 192.168.3.24
    master002:
      ip: 192.168.3.25
    master003:
      ip: 192.168.3.26

  proxy:
    proxy01:
      ip: 192.168.3.27
    proxy02:
      ip: 192.168.3.28
    proxy03:
      ip: 192.168.3.29
    proxy04:
      ip: 192.168.3.24
    proxy05:
      ip: 192.168.3.25
    proxy06:
      ip: 192.168.3.26
  
  ingress_work:
    ingress01:
      ip: 192.168.3.27
    ingress02:
      ip: 192.168.3.28
    ingress03:
      ip: 192.168.3.29
  
  glusterfs_work:
    glusterfs01:
      ip: 192.168.3.27
    glusterfs02:
      ip: 192.168.3.28
    glusterfs03:
      ip: 192.168.3.29
    
  
vip: 192.168.1.1


################################ BASE ##########################
# base dependent package
# 基础依赖包
# DEPENDENT_PACKAGES: [ntp, vim, wget, gcc, gcc-c++, libselinux-python]
DEPENDENT_PACKAGES: [ntp, vim, wget]

# NetworkManager tag
# 默认关闭NetworkManager服务
NetworkManager_TAG: true

# run work
RUN_WORK: "/var/run"

# app work
APP_WORK: "/opt/kubernetes"

# bin work
BIN_WORK: "/usr/local/bin"

# systemd service work
LIB_WORK: "/usr/lib/systemd/system"

# kubernetes cni
KUBE_N: "10.254.0"
KUBE_CNI: "{{ KUBE_N }}.0/16"

# kubernetes cluster dns domain 
# kubernetes 群集服务发现dns IP
# KUBE_DNS: "k8s-dns.{{ DOMAIN }}"
KUBE_DNS: "{{ KUBE_N }}.2"

# network card enp0s8 ens37 ens33 ens34
# 配置flanneld 调用的网络通信网卡，无论几个网卡；都必须选择一个网卡配置
NETWORK_CARD: "ens34"

# kube add ons info file
KUBE_ADDONS_INFO: "/tmp/addons.info"

# clear etcd and kubernetes data dir
# 多次运行脚本时是否需要清除老的已存在目录，默认会清理etcd data kubernetes 配置目录
#   同一个环境跑多次的时候，请注意；不要误操作
CLEAR_EK_TAG: true


################################ CA ##########################
# ca expriry default 10 year
EXPIRY_TIME: "876000h"

# ca region
CA_REGION: "Shenzhen"

# kubernetes bootstrap token (head -c 16 /dev/urandom | od -An -t x | tr -d ' ')
BOOTSTRAP_TOKEN: "e7e9519e3dcdc1030964a23e95be008b"


################################ ETCD ##########################
# etcd datadir
ETCD_WORK: "/var/lib/etcd"


################################ KUBERNETES ##########################
# kube KUBE_TAG used to determine the kubernetes apiserver address
# default false, it mean one cluster only one kubernetes apiserver
# if KUBE_TAG=true need give haproxy IP/domain or nginx IP/domain 
# KUBE_TAG: false
# 默认为false，表示群集配置单个master节点；
# 配置为true，表示群集配置多个master节点；必须配置下面KUBE_PROXY参数和port
#   表示为apiserver地址和端口
KUBE_TAG: true

# when  KUBE_TAG=true and you set PROXY, kubernetes apiserver=KUBE_PROXY
# default not set 
# if used it, it need one proxy service IP/domain
# if KUBE_PROXY="127.0.0.1" or KUBE_PROXY="localhost" no need install keepalived
# 当KUBE_TAG 为false时，此处配置不生效，
# 当配置为127.0.0.1 和 localhost 时；默认在本地安装haproxy或者nginx作为代理到apiserver
KUBE_PROXY: "127.0.0.1"
KUBE_PROXY_PORT: 8443

# when  KUBE_TAG!=false, if set KUBE_APISERVER apiserver={{ KUBE_APISERVER }}, if not set 
#   kubernetes apiserver address is {{ groups.k8s_master.0 }}
#     inventory k8s_master group first one
# 当KUBE_TAG 为true时， 此处配置不生效
# 单个master时，work使用的apiserver地址
KUBE_APISERVER: "one-master.{{ DOMAIN }}"

# kubernetes audit log dir
KUBE_AUDIT: "/var/log/kube-audit"

############################# kube master
# apiserver count default 1
API_COUNT: 3

############################# kube work
# coredns cluster domain
# kubernetes 服务发现使用内部查询域名
CLUSTER_DOMAIN: "cluster.local"

# pause image
KUBELET_POD_INFRA_CONTAINER: "registry.cn-hangzhou.aliyuncs.com/google-containers/pause-amd64:3.0"

# kubelet workdir
KUBELET_WORK: "/var/lib/kubelet"

# proxy mode
# 是否启用ipvs, 默认启用
KUBE_IPVS_TAG: true

############################################### DOCKER #############################
# docker old package
DOCKER_REMOVE_PACKAGES:
  - docker
  - docker-client
  - docker-client-latest
  - docker-common
  - docker-latest
  - docker-latest-logrotate
  - docker-selinux
  - docker-engine-selinux
  - docker-engine


# default 18.03.1 select 17.12.1 or 18.03.1
DOCKER_VERSION: "18.03.1"

# systemd or  cgroupfs 
CGROUP_DRIVE: "systemd"

# cn registry
CN_REGISTRY: "https://registry.docker-cn.com"

# docker work dir default /var/lib/docker
# 当启用了此项配置，会为docker配置data目录指向
DOCKER_WORK: "/data/docker"


################################ NETWORK ##########################
######## FLANNELD
# flannel log
FLANNEL_LOG: "/var/log/flannel"

# flannel type
FLANNEL_TYPE: "host-gw"

# flannel cni
FLANNEL_CNI: "10.30.0.0/16"


################################ KUBERNSTES HA ##########################
# ha_server 2 paras haproxy and nginx
# kubernetes 高可用默认支持haproxy和nginx，并且KUBE_TAG为true时才生效
# 选择使用那种应用作为高可用组件，参数 haproxy nginx
HA_SERVER: "haproxy"

################################ HAPROXY 
# haproxy work
HAPROXY_WORK: "/var/lib/haproxy"

# haproxy run
HAPROXY_RUN: "/run"

# haproxy log
HAPROXY_LOG: "/var/log/haproxy"

# haproxy etc
HAPROXY_ETC: "/etc/haproxy"

################################ NGINX 
# nginx etc
NGINX_ETC: "/etc/nginx"

# nginx log
NGINX_LOG: "/var/log/ngxin"


################################ KEEPALIVED
# if install keepalived
# 是否为群集安装keepalived
KEEPALIVED:
  tag: false
  etc: "/etc/keepalived"
  vip: ""


################################ KUBE-ADDONS ##########################
# coredns
COREDNS:
  image: "registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.1.3"
  #image: "coredns/coredns:1.2.5"
  
# dashboard 
DASHBOARD:
  image: "mirrorgooglecontainers/kubernetes-dashboard-amd64:v1.10.0"
  nodeport: 30001
  web_url: "k8s-dashboard.{{ DOMAIN }}"

# traefik 
TRAEFIK: 
  image: "traefik:1.7.4-alpine"
  web_url: "traefik-dashboard.{{ DOMAIN }}"
  label_key: "traefik"
  label_value: "proxy"
  cert_name: "traefik-cert"
  configmap_name: "traefik-conf"

# ingress keepalived
INGRESS_KP:
  tag: true
  etc: "/etc/keepalived"
  vip: "192.168.3.200"
  interface: "ens34"


# heapster 
HEAPSTER:
  image: "mirrorgooglecontainers/heapster-amd64:v1.5.4"

# grafana 
GRAFANA:
  image: "mirrorgooglecontainers/heapster-grafana-amd64:v5.0.4"
  nodePort: 30002
  web_url: "grafana.{{ DOMAIN }}"

# influxdb 
INFLUXDB:
  image: "mirrorgooglecontainers/heapster-influxdb-amd64:v1.5.2"

# prometheus 
PRPMETHEUS:
  tag: true
  image: "prom/prometheus:v2.3.2"
  nodePort: 30003

# efk 
EFK:
  tag: true 
  es_image: "registry.cn-hangzhou.aliyuncs.com/atos/elasticsearch-oss:6.2.4"
  ka_image: "registry.cn-beijing.aliyuncs.com/efk-install/kibana-oss:6.2.4"
  fd_image: "netonline/fluentd-elasticsearch:v2.0.4"
  web_url: "kibana.{{ DOMAIN }}"
  nodePort: 30004

GLUSTERFS:
  tag: true 
  image: ""
  label_key: "storagenode"
  label_value: "glusterfs"
  PACKAGES: [glusterfs, glusterfs-server, glusterfs-fuse, glusterfs-rdma]
  devices: "/dev/sdb"



################################ KERNEL ##########################
# docker harbor
HARBOR:
  hostname: "harbor.{{ DOMAIN }}"
  ui_url_protocol: http
  ssl_cert: "/data/harbor/cert/server.crt"
  ssl_cert_key: "/data/harbor/cert/server.key"
  harbor_admin_password: "Harbor12345" # must more than 10


################################ HARBER ##########################
# kernetl tag default false, if you want to update kernel; need set it true
# 程序提供升级Linux内核为最新，默认关闭
KERNEL_TAG: false


################################ FILESYSTEM ##########################
# use partition disk, only a partition
# 默认支持针对单个磁盘，分区单个
# disk name
DISK_NAME: "/dev/sdb"

# mount path
MOUNT_PATH: "/data"

# fstype ext4 ext3 ext2 xfs
FSTYPE: "xfs"


################################ USER PASSWORD ##########################
# 默认提供为linux用户修改密码，使用程序；妥善保管次配置文件
# user name
USER_NAME: "root"
# user password
USER_PWD: "123@#$jk@sJE@3d7*&#234@#$sfjl"

